name: PufferPanel

on:
  workflow_dispatch:

permissions:
  actions: write
  contents: write   # required for pushing changes back

concurrency:
  group: pufferpanel
  cancel-in-progress: true
  
jobs:
  pufferpanel:
    runs-on: ubuntu-latest
    timeout-minutes: 355
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0   # allow commits back
    
      # 4. Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version
      
      # --- Restore old server data ---
      - name: Pull latest Puffer Panel data
        if: ${{ always() }}
        run: |
          git fetch origin main
          git checkout origin/main -- pufferpanel_*.tar.gz.part-* || echo "No previous backup found"
          if ls pufferpanel_*.tar.gz.part-* 1> /dev/null 2>&1; then
            echo "Joining backup parts..."
            cat pufferpanel_*.tar.gz.part-* > pufferpanel.tar.gz
            rm -rf pufferpanel
            mkdir -p pufferpanel
            echo "Extracting backup..."
            sudo tar -xzf pufferpanel.tar.gz -C .
            echo "Latest Puffer Panel data restored."
            ls -l pufferpanel
          else
            echo "No backup found, starting fresh."
          fi
      - name: Start Playitgg Container
        run: |
          docker-compose up -d
          
      # 7. Create Docker Compose file
      - name: Create Docker Compose for PufferPanel
        run: |
          mkdir -p pufferpanel
          cd pufferpanel
          cat > docker-compose.yml <<'EOF'
          version: '3.8'
          services:
            pufferpanel:
              image: pufferpanel/pufferpanel:latest
              container_name: pufferpanel
              restart: unless-stopped
              ports:
                - "8080:8080"
                - "5657:5657"
              volumes:
                - ./config:/etc/pufferpanel
                - ./data:/var/lib/pufferpanel
              environment:
                PUFFER_ADMIN_EMAIL: "admin@example.com"
          EOF
      # 8. Start PufferPanel
      - name: Start PufferPanel Container
        run: |
          cd pufferpanel
          docker-compose up -d
      # 9. Create Admin User
      - name: Create Admin User
        run: |
          docker exec pufferpanel /pufferpanel/pufferpanel user add \
          --name kshosting \
          --email kshosting@ksmail.com \
          --password kshosting@55 \
          --admin || echo "User may already exist"

      - name: Install tmate
        run: sudo apt-get update && sudo apt-get install -y tmate
        
      # 11. Run LocalTunnel (keep alive)
      - name: Start tmate session
        run: |
          tmate -S /tmp/tmate.sock new-session -d
          tmate -S /tmp/tmate.sock wait tmate-ready
          echo "SSH session:"
          tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}'
          echo "Web session:"
          tmate -S /tmp/tmate.sock display -p '#{tmate_web}'
          sleep 20000
          
      # 12. Save & Commit PufferPanel Data
      - name: Commit Puffer Panel
        if: ${{ always() }}
        run: |
          TIMESTAMP=$(date +"%Y-%m-%d_%H-%M-%S")
          BACKUP_NAME="pufferpanel_${TIMESTAMP}.tar.gz"
          echo "Cleaning old backups..."
          git ls-files -z "pufferpanel_*.tar.gz.part-*" | xargs -0 git rm -f || true
          echo "Creating backup: $BACKUP_NAME"
          sudo tar -czf - pufferpanel | split -b 90M - ${BACKUP_NAME}.part-
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add ${BACKUP_NAME}.part-*
          git commit -m "Backup PufferPanel data ($TIMESTAMP)" || echo "Nothing to commit"
          git push origin main || echo "Nothing to push"
      # --- Auto-restart workflow ---
      - name: Restart Workflow
        if: ${{ always() }}
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: PufferPanel
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}
